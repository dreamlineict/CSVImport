//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSVImport.DAL.edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ImportsContext : DbContext
    {
        public ImportsContext()
            : base("name=ImportsContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ImportData> ImportDatas { get; set; }
    
        public virtual ObjectResult<usp_ImportMaster_Result> usp_ImportMaster()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ImportMaster_Result>("usp_ImportMaster");
        }
    
        public virtual ObjectResult<usp_ImportMaster_Details_Result> usp_ImportMaster_Details(Nullable<long> accountNumber)
        {
            var accountNumberParameter = accountNumber.HasValue ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ImportMaster_Details_Result>("usp_ImportMaster_Details", accountNumberParameter);
        }
    
        public virtual ObjectResult<usp_ImportReport_Result> usp_ImportReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ImportReport_Result>("usp_ImportReport");
        }
    
        public virtual int usp_UpdateAccountTypeForAccount(Nullable<long> accountNumber, Nullable<int> accountType)
        {
            var accountNumberParameter = accountNumber.HasValue ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(long));
    
            var accountTypeParameter = accountType.HasValue ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateAccountTypeForAccount", accountNumberParameter, accountTypeParameter);
        }
    }
}
